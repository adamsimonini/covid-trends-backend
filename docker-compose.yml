# docker compose docs: https://docs.docker.com/compose/compose-file/compose-file-v3/

version: "3.8"
services:
  pg:
    container_name: pg_container
    image: postgres:13.2-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      PGUSER: postgres
    ports:
      - "5432:5432"
    volumes:
      - "${PWD}/data/schema/init.sql:/docker-entrypoint-initdb.d/1-init.sql"
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.2
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
      - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE}
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=${PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED}
      - PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED=${PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED}
    ports:
      - "5433:5433"
    depends_on:
      - pg
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    stop_grace_period: "20s"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=pg
      - DB_PORT=${DB_PORT}
      - DATABASE=postgres
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
    ports:
      - 8000:8000
    volumes:
      - ./app:/app # this needs to match the dockerfile's WORK/COPY pair
    depends_on:
      - pg
networks:
  default:
    name: nunet
